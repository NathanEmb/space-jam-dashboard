name: CD

on:
  push:
    branches: ["main"]

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout
env:
  AWS_REGION: us-east-2                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: spacejamprod/server          # set this to your Amazon ECR repository name
  ECS_SERVICE: spacejam                 # set this to your Amazon ECS service name
  ECS_CLUSTER: SpacejamProdASG                 # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: aws/spacejam-server-cli-input.json # set this to the path to your Amazon ECS task definition
                                               # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: spacejam-server           # set this to the name of the container in the

jobs:
  BuildAndDeploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
      with:
        role-to-assume: arn:aws:iam::585008081433:role/GHActionsRole
        aws-region: us-east-2
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@
      
    - name: Set short sha
      id: sha_short
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
  
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ steps.sha_short.outputs.sha_short }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
        provenance: false